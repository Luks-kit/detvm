
; factorial function in DETASM

; computes n! iteratively

.func factorial
.params 1           ; one argument (n)
param n
.locals 4           ; locals: n_copy, result, counter
var n_copy
var result
var counter
var flag

    ; copy argument into n_copy
    LOADARG n -> n_copy
    ; initialize result and counter = 1
    LOADCL 1 -> result
    LOADCL 1 -> counter


.label loop_start

    ; if counter > n_copy, jump to loop_end
    CMPL counter, n_copy -> flag
    JLG flag, loop_end

    ; result *= counter
    MULL result, counter -> result

    ; counter += 1
    LOADCL 1 -> flag
    ADDL flag, counter -> counter

    JMP loop_start

.label loop_end
    ; return result
    RET result
.end

